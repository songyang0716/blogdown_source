) +
theme(aspect.ratio = 1)
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1
) +
theme(aspect.ratio = 1) +
corrd_polar()
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1
) +
theme(aspect.ratio = 1) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1
) +
#  theme(aspect.ratio = 1) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1
) +
theme(aspect.ratio = 1) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL)
coord_polar()
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(fill = cut)
?geom_bar()
ggplot(data = diamonds) +
geom_bar(aes(clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = factor(1), fill = cut), width = 1)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = factor(1), fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = factor(1), fill = cut)) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = factor(1), fill = cut)) +
coord_polar(theta = "y")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = factor(1), fill = cut), width = 1) +
coord_polar(theta = "y")
?coord_polar()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = factor(1), fill = cut), width = 1) +
coord_polar(theta = "x")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = factor(1), fill = cut), width = 1) +
coord_polar(theta = "y")
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1,
position = 'fill'
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = cut, fill = cut),
width = 1
) +
theme(aspect.ratio = 1) +
labs(x = NULL, y = NULL) +
coord_polar()
?labs
?geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy))
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
corrd_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
sin(pi / 2)
seq(1, 10, length.out = 10)
seq(1, 10, length.out = 100)
seq(1, 10, length.out = 6)
library(nycflights13)
library(tidyverse)
install.packages("nycflights13")
library(nycflights13)
flights
?flights
view(flights)
View(flights)
1 / 49 * 49
1 / 49 * 49 == 1
sqrt(2) ^ 2
nov_dec <- filter(flights, month == 11 || month ==12)
nov_dec
nov_dec['month']
nov_dec <- filter(flights, month == 11 | month ==12)
nov_dec
nov_dec['month']
nov_dec['month'].unique
nov_dec['month'].unique()
unique(nov_dec['month'])
nov_dec <- filter(flights, month %in% c(11,12))
NA ==5
is.na(NA)
power.prop.test(p1 = 0.0315, p2 = 0.0365, sig.level = 0.05, power = 0.8, alternative = "two.sided")
power.prop.test(p1 = 0.0315, p2 = 0.0365, sig.level = 0.05, power = 0.8, alternative = "one.sided")
power.prop.test(p1 = 0.0315, p2 = 0.0365, sig.level = 0.05, power = 0.8, alternative = "two.sided")
0.0315-0.005
power.prop.test(p1 = 0.0315, p2 = 0.0265, sig.level = 0.05, power = 0.8, alternative = "two.sided")
power.prop.test(p1 = 0.0315, p2 = 0.0365, sig.level = 0.05, power = 0.8, alternative = "two.sided")
?power.prop.test
power.prop.test
0.5/3.15
power.prop.test(p1 = 0.0315, p2 = 0.0365, sig.level = 0.05, power = 0.8, alternative = "two.sided")
0.2/3.15
power.prop.test(p1 = 0.0315, p2 = 0.0335, sig.level = 0.05, power = 0.8, alternative = "two.sided")
0.0315+0.002
power.prop.test(p1 = 0.0315, p2 = 0.0365, sig.level = 0.05, power = 0.8, alternative = "two.sided")
power.prop.test(p1 = 0.0315, p2 = 0.0335, sig.level = 0.05, power = 0.8, alternative = "two.sided")
50000*0.1
123397.9 / 5000
0.2/3.15
power.prop.test(p1 = 0.5, p2 = 0.55, sig.level = 0.01, power = 0.8, alternative = "two.sided")
power.prop.test(p1 = 0.5, p2 = 0.55, sig.level = 0.01, power = 0.8, alternative = "one.sided")
2.326 * sqrt(0.25) + 0.842 * sqrt(0.2475)
2.326 * sqrt(0.25) - 0.842 * sqrt(0.2475)
power.prop.test(p1 = 0.5, p2 = 0.5367, sig.level = 0.01, power = 0.8, alternative = "one.sided")
power.prop.test(p1 = 0.5, p2 = 0.55, sig.level = 0.01, power = 0.8, alternative = "one.sided")
0.05*0.05
(1.96 - 0.85)^2 / 0.0025
(2.326 - 0.85)^2 / 0.0025
(2.326 - 0.842)^2 / 0.0025
power.prop.test
?between
x = c(1,2,3,4,5,6,7,8,9)
x
between(x, 4,7)
x %>% filter(between(4,7))
x %>% filter(between(x,4,7))
?filter
flights
filter(flights, month == 1)
filter(flights, between(2,3))
filter(flights, between(month,2,3))
arrange(flights, year, month, day)
arrange(flights, year, month, day)
arrange(flights, desc(arr_delay))
arrange(flights, desc(dep_delay))
df <- tibble(x = c(5, 2, NA))
df
arrange(x)
filter(x == 5)
df %>%
filter(x == 5)
df %>%
arrange(x)
arrange(is.na(x))
df %>%
arrange(is.na(x))
arrange(!is.na(x))
df %>%
arrange(!is.na(x))
arrange(x)
df %>%
arrange(x)
df %>%
arrange(desc(x))
df %>%
arrange(desc(is.na(x)))
rename(flights, tail_num = tailnum)
flights
flights %>%
select(year, year)
new_post(title = 'Scrape daily stock price and deliver to your email with python')
library(blogdown)
getwd()
setwd('/Users/songyang/Desktop/blog/blogdown_source/blogdown_source')
new_post(title = 'Scrape daily stock price and deliver to your email with python')
server_site()
getwd()
build_site()
server_site()
build_site()
build_site()
server_site()
server_site()
?build_site()
serve_site()
serve_site()
build_site()
serve_site()
serve_site()
build_site()
data <- read.delim('/Users/songyang/Desktop/Data_Analysis_Andrew_Gelman/ARM_Data/rodents/dist.dat', header = TRUE, sep="\t")
View(data)
data <- read.delim('/Users/songyang/Desktop/Data_Analysis_Andrew_Gelman/ARM_Data/rodents/dist.dat', header = TRUE, sep=" ")
View(data)
apt <- read.delim('/Users/songyang/Desktop/Data_Analysis_Andrew_Gelman/ARM_Data/rodents/apt.dat', header = TRUE, sep=" ")
districts <- read.delim('/Users/songyang/Desktop/Data_Analysis_Andrew_Gelman/ARM_Data/rodents/dist.dat', header = TRUE, sep=" ")
apt <- read.delim('/Users/songyang/Desktop/Data_Analysis_Andrew_Gelman/ARM_Data/rodents/apt.dat', header = TRUE, sep=" ")
View(apt)
View(districts)
View(apt)
View(districts)
View(apt)
View(districts)
View(apt)
districts <- read.delim('/Users/songyang/Desktop/Data_Analysis_Andrew_Gelman/ARM_Data/rodents/dist.dat', header = TRUE, sep=" ")
apt <- read.delim('/Users/songyang/Desktop/Data_Analysis_Andrew_Gelman/ARM_Data/rodents/apt.dat', header = TRUE, sep=" ")
View(districts)
data <- read.csv('/Users/songyang/Desktop/Data_Analysis_Andrew_Gelman/MMvideo.txt', header = TRUE, sep=" ")
View(data)
summary(data)
data %>%
ggplot(aes(trail, score, group = agegrp)) +
geom_point()
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data %>%
ggplot(aes(trail, score, group = agegrp)) +
geom_point()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
data %>%
ggplot(aes(trail, score, group = agegrp)) +
geom_point()
data %>%
ggplot(aes(trial, score, group = agegrp)) +
geom_point()
data %>%
ggplot(aes(trial, score, group = agegrp)) +
geom_point(color = agegrp)
data %>%
ggplot(aes(trial, score, group = agegrp),color = agegrp) +
geom_point()
data %>%
ggplot(aes(trial, score, group = agegrp,color = agegrp)) +
geom_point()
data %>%
ggplot(aes(trial, score, group = agegrp,color = agegrp)) +
geom_point() +
geom_line()
data %>%
ggplot(aes(trial, score, group = agegrp,color = agegrp)) +
geom_point() +
geom_smooth()
data %>%
ggplot(aes(trial, score, group = agegrp,color = agegrp)) +
geom_point() +
geom_smooth(method = 'lm')
m1 <- lm(score ~ 1 + age + trial + agegrp  ,data = data)
summary(m1)
install.packages("lme4")
library(lme4)
m2 <- lmer(score ~ age + trial + agegrp + (1 | agegrp), data = data)
summary(m2)
m3 <- lmer(score ~ age + trial  + (1 | agegrp), data = data)
summary(m3)
m2 <- lmer(score ~ age + trial + agegrp + (1 | id), data = data)
summary(m2)
m1 <- lm(score ~ 1 + age + trial + agegrp  ,data = data)
summary(m1)
m2 <- lmer(score ~ age + trial + agegrp + (1 | id), data = data)
summary(m2)
m2 <- lmer(score ~ age + trial + agegrp + (1 + age | id), data = data)
summary(m2)
m1 <- lm(score ~ 1 + age + trial + agegrp + agegrp * trial  ,data = data)
summary(m1)
m2 <- lmer(score ~ age + trial + agegrp + agegrp * trial + (1  | id), data = data)
summary(m2)
m3 <- lmer(score ~ age + trial + agegrp + agegrp * trial + (1 + trial | id), data = data)
summary(m3)
d = read.csv('http://www.bodowinter.com/tutorial/politeness_data.csv')
View(d)
d
d <- rename(d,condition = attitude, pitch = frequency)
View(d)
summary(d)
table(d$subject, d$condition)
qplot(condition, pitch, facets = . ~ subject,
colour = subject, geom = "boxplot", data = d)
d %>%
ggplot(x = condition, y = pitch) +
facet_wrap(~ subject)
d %>%
ggplot(x = condition, y = pitch) +
facet_wrap(~ subject, ncol = 6)
d %>%
ggplot(aes(x = condition, y = pitch, colour = subject)) +
geom_boxplot() +
facet_wrap(~ subject, ncol = 6)
m1 <- lm(pitch ~ 1 + gender + condition)
m1 <- lm(pitch ~ 1 + gender + condition, data = d)
summary(m1)
m2 <- lm(pitch ~ 1 + gender + condition + (1 | subject), data = d)
summary(m2)
m2 <- lmer(pitch ~ 1 + gender + condition + (1 | subject), data = d)
summary(m2)
coef(m2)
coef(m2)$subject
coef(m2)$subject[1]
fixef(m2)['(Intercept)']
ranef(m2)$subject
m2 <- lmer(pitch ~ 1 + gender + condition + (1 | subject), data = d)
summary(m2)
m3 <- lmer(pitch ~ 1 + gender + condition + (1 + condition | subject), data = d)
summary(m3)
coef(m3)
coef(m3)[3]
coef(m3)$subject[3]
coef(m3)$subject[1]
diamond %>%
count(cut, clarity)
diamonds %>%
count(cut, clarity)
diamonds %>%
count(cut, clarity) %>%
ggplot(aes(clarity, cut)) +
geom_tile()
diamonds %>%
count(cut, clarity) %>%
ggplot(aes(clarity, cut, fill = n)) +
geom_tile()
tibble(diamonds)
as_tibble(diamonds)
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
as_tibble(diamonds)
diamonds %>%
.$clarity
summary(as_tibble(diamonds))
class(diamonds)
class(as_tibble(diamonds))
read_csv("a,b\n1,2,3\n4,5,6")
read_csv("a,b,3\c\n1,2,3\n4,5,6")
read_csv("a,b,c\n1,2,3\n4,5,6")
library(dplyr)
library(tidyr)
library(Lahman)
Pitching
dim(Pitching)
pitchers <- Pitching %>%
group_by(playerID) %>%
summarise(gamesPitched = sum(G)) %>%
filter(gamesPitched > 3)
View(pitchers)
dim(Batting)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(pitchers, by = 'plyaerID') %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(pitchers, by = 'playerID') %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
View(career)
anti_join
?anti_join
Master
?tbl_df()
tbl_df(Batting)
career <- Master %>%
#tbl_df() %>%
select(playerID, nameFirst, nameLast)
career <- Batting %>%
filter(AB > 0) %>%
anti_join(pitchers, by = 'playerID') %>%
group_by(playerID) %>%
summarize(H = sum(H), AB = sum(AB)) %>%
mutate(average = H / AB)
Master %>%
#tbl_df() %>%
select(playerID, nameFirst, nameLast)
Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast)
Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ")
career <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(career, by = 'playerID')
View(career)
m <- MASS::fitdistr(career_filtered$average, dbeta, start = list(shape1 = 1, shape2 = 10))
career_filtered <- career %>% filter(AB >= 500)
m <- MASS::fitdistr(career_filtered$average, dbeta, start = list(shape1 = 1, shape2 = 10))
alpha0 <- m$estimate[1]
alpha0
beta0 <- m$estimate[2]
career_eb <- career %>%
mutate(eb_estimate = (H + alpha0) / (AB + alpha0 + beta0)) %>%
mutate(alpha1 = H + alpha0, beta1 = AB - H  + beta0) %>%
arrange(desc(eb_estimate))
View(career_eb)
aaron <- career_eb %>% filter(name = "Hank Aaron")
piazza <- career_eb %>% filter(name = "Mike Piazza")
two_player <- bind_rows(aaron, piazza)
two_player
aaron <- career_eb %>% filter(name = "Hank Aaron")
piazza <- career_eb %>% filter(name = "Mike Piazza")
aaron <- career_eb %>% filter(name == "Hank Aaron")
piazza <- career_eb %>% filter(name == "Mike Piazza")
two_player <- bind_rows(aaron, piazza)
two_player
library(broom)
library(ggplot2)
theme_set(theme_bw())
two_player %>%
inflate(x = seq(0.28, 0.33, 0.00025))
len(seq(0.28, 0.33, 0.00025))
length(seq(0.28, 0.33, 0.00025))
?inflate
two_player %>%
inflate(x = seq(0.28, 0.33, 0.00025)) %>%
mutate(density = dbeta(x, alpha1, beta1)) %>%
ggplot(aes(x, density, color = name)) +
geom_line() +
labs(x = "Batting average", color = "")
piazza_simulation <- rbeta(1e6, piazza$alpha1, piazza$beta1)
piazza_simulation
len(piazza_simulation)
length(piazza_simulation)
aaron_simulation <- rbeta(1e6, aaron$alpha1, aaron$beta1)
sim <- mean(piazza_simulation >= aaron_simulation)
sim
piazza_simulation <- rbeta(1e7, piazza$alpha1, piazza$beta1)
aaron_simulation <- rbeta(1e7, aaron$alpha1, aaron$beta1)
sim <- mean(piazza_simulation >= aaron_simulation)
sim
piazza_simulation <- rbeta(1e7, piazza$alpha1, piazza$beta1)
aaron_simulation <- rbeta(1e7, aaron$alpha1, aaron$beta1)
sim <- mean(piazza_simulation >= aaron_simulation)
sim
d <- .00002
limits <- seq(.29, .33, d)
limits
sum(outer(limits, limits, function(x, y) {
(x > y) *
dbeta(x, piazza$alpha1, piazza$beta1) *
dbeta(y, aaron$alpha1, aaron$beta1) *
d ^ 2
}))
c <- outer(limits, limits, function(x, y) {
(x > y) *
dbeta(x, piazza$alpha1, piazza$beta1) *
dbeta(y, aaron$alpha1, aaron$beta1) *
d ^ 2
})
len(c)
length(c)
length(limits)
2001*2001
(2 > 1) * 1
(2 < 1) * 1
c
c.shape
dim(c)
pnorm
?prnorm
>pnorm
?pnorm
pnorm(0,0,1)
pnorm(0,0.1,1)
pnorm(0.8,0,1)
?prop.test
two_player
prop.test(two_player$H, two_player$AB)
career_eb
>bind_cols
?bind_cols
?qnorm
qnorm(0.025, 0,1)
qnorm(0.5, 0,1)
